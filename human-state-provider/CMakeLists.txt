cmake_minimum_required(VERSION 3.0)

project(human-state-provider CXX)

## Find packages
find_package(YARP REQUIRED)

# Generate thrift files  
# yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/thrifts/Force6D.thrift" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated" THRIFT_SOURCES THRIFT_HEADERS THRIFT_INCLUDE_DIRS)

# add_library(human-forces-provider-data ${THRIFT_SOURCES} ${THRIFT_HEADERS})
# target_include_directories(human-forces-provider-data PUBLIC ${THRIFT_INCLUDE_DIRS} ${YARP_INCLUDE_DIRS})
# target_include_directories(human-forces-provider-data PUBLIC ${YARP_INCLUDE_DIRS})
# target_link_libraries(human-forces-provider-data YARP::YARP_init)
# target_link_libraries(human-forces-provider-data YARP::YARP_OS)

## Include directories
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

set(SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/HumanStateProvider.cpp 
            ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp
)

set(HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/include/HumanStateProvider.h
  )

## Declare a C++ executable
add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS})
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

## Specify targets for the linkage
target_link_libraries(${PROJECT_NAME} 
                                      YARP::YARP_OS)
